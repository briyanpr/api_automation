{
  "stats": {
    "suites": 3,
    "tests": 8,
    "passes": 7,
    "pending": 0,
    "failures": 1,
    "start": "2023-09-18T06:56:27.679Z",
    "end": "2023-09-18T06:56:34.730Z",
    "duration": 7051,
    "testsRegistered": 8,
    "passPercent": 87.5,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e3f16dfe-f2d3-40a1-b90c-367e6e69fd18",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b126b6cb-491e-4c6f-a8a9-76e9110c9bd3",
          "title": "Register Test",
          "fullFile": "D:\\File Code\\QA\\StudyJam\\Portofolio\\automation_api\\test\\scenario\\auth.test.js",
          "file": "\\test\\scenario\\auth.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify auth with input valid data",
              "fullTitle": "Register Test Verify auth with input valid data",
              "timedOut": false,
              "duration": 1105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await BookerApi.auth(data.VALID_REGISTER);\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "2dcf8f9f-100b-447f-87d5-a0590c802b27",
              "parentUUID": "b126b6cb-491e-4c6f-a8a9-76e9110c9bd3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2dcf8f9f-100b-447f-87d5-a0590c802b27"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1105,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9e8d06c5-d898-4943-b007-2c2f3cdf2819",
          "title": "Booking",
          "fullFile": "D:\\File Code\\QA\\StudyJam\\Portofolio\\automation_api\\test\\scenario\\booking.test.js",
          "file": "\\test\\scenario\\booking.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate get booking id",
              "fullTitle": "Booking Validate get booking id",
              "timedOut": false,
              "duration": 1328,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await BookerApi.getbookingid();\nassert.equal(response.status, 200);   \nexpect(response.data).to.be.jsonSchema(schema.GET_BOOKING_ID_SCHEMA)",
              "err": {},
              "uuid": "fbc71782-d30d-4b24-a4e2-962f949cc637",
              "parentUUID": "9e8d06c5-d898-4943-b007-2c2f3cdf2819",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate specific get booking id",
              "fullTitle": "Booking Validate specific get booking id",
              "timedOut": false,
              "duration": 767,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const param = getParams(data.GET_BOOKING_PARAMS.page)\nconst response = await BookerApi.getbooking(param);\nassert.equal(response.status, 200);\nexpect(response.data).to.be.jsonSchema(schema.GET_SPECIFIC_BOOKING_ID_SCHEMA)",
              "err": {
                "message": "AssertionError: expected value to match json-schema '{\"$schema\":\"https://json-schem...' -> '{\"firstname\":\"Susan\",\"lastname...'\n      Missing required property: additionalneeds\n          schema: {\"$schema\":\"https://json-schema.org/draft/2019-09/schema\",\"t...\n          rule:   /required/5 -> \"additionalneeds\"",
                "estack": "AssertionError: expected value to match json-schema '{\"$schema\":\"https://json-schem...' -> '{\"firstname\":\"Susan\",\"lastname...'\n      Missing required property: additionalneeds\n          schema: {\"$schema\":\"https://json-schema.org/draft/2019-09/schema\",\"t...\n          rule:   /required/5 -> \"additionalneeds\"\n    at Context.<anonymous> (file:///D:/File%20Code/QA/StudyJam/Portofolio/automation_api/test/scenario/booking.test.js:23:37)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "cee1055d-21ed-4158-8f13-f4b9d40238f3",
              "parentUUID": "9e8d06c5-d898-4943-b007-2c2f3cdf2819",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate create booking",
              "fullTitle": "Booking Validate create booking",
              "timedOut": false,
              "duration": 760,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await BookerApi.creategetbooking(data.CREATE_BOOKING);\nassert.equal(response.status, 200);   \nexpect(response.data).to.be.jsonSchema(schema.CREATE_BOOKING)",
              "err": {},
              "uuid": "bff2e032-66a2-4489-8055-28b773bdd47a",
              "parentUUID": "9e8d06c5-d898-4943-b007-2c2f3cdf2819",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate update booking",
              "fullTitle": "Booking Validate update booking",
              "timedOut": false,
              "duration": 762,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await BookerApi.updatebooking(data.UPDATE_BOOKING);\nassert.equal(response.status, 200);\nexpect(response.data).to.be.jsonSchema(schema.UPDATE_BOOKING)",
              "err": {},
              "uuid": "85924fb5-2976-4ec8-af7d-d32e1c008326",
              "parentUUID": "9e8d06c5-d898-4943-b007-2c2f3cdf2819",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate partial update booking",
              "fullTitle": "Booking Validate partial update booking",
              "timedOut": false,
              "duration": 814,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await BookerApi.partialupdate(data.PARTIAL_UPDATE);\nassert.equal(response.status, 200);   \nexpect(response.data).to.be.jsonSchema(schema.PARTIAL_UPDATE)",
              "err": {},
              "uuid": "b40ab386-f137-49ae-91e9-b4e18020391b",
              "parentUUID": "9e8d06c5-d898-4943-b007-2c2f3cdf2819",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate delete booking id",
              "fullTitle": "Booking Validate delete booking id",
              "timedOut": false,
              "duration": 777,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await BookerApi.deletebooking();\nassert.equal(response.status, 201);",
              "err": {},
              "uuid": "586703f5-4800-44e4-b7d4-613da5c6a243",
              "parentUUID": "9e8d06c5-d898-4943-b007-2c2f3cdf2819",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fbc71782-d30d-4b24-a4e2-962f949cc637",
            "bff2e032-66a2-4489-8055-28b773bdd47a",
            "85924fb5-2976-4ec8-af7d-d32e1c008326",
            "b40ab386-f137-49ae-91e9-b4e18020391b",
            "586703f5-4800-44e4-b7d4-613da5c6a243"
          ],
          "failures": [
            "cee1055d-21ed-4158-8f13-f4b9d40238f3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5208,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "be8b1146-4c6a-459b-adc2-1c4159c66952",
          "title": "Health Check",
          "fullFile": "D:\\File Code\\QA\\StudyJam\\Portofolio\\automation_api\\test\\scenario\\ping.test.js",
          "file": "\\test\\scenario\\ping.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify simple health check endpoint",
              "fullTitle": "Health Check Verify simple health check endpoint",
              "timedOut": false,
              "duration": 720,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await BookerApi.healthcheck();\nassert.equal(response.status, 201);",
              "err": {},
              "uuid": "1ce795c1-ea93-4b40-aa1a-745657bc694d",
              "parentUUID": "be8b1146-4c6a-459b-adc2-1c4159c66952",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ce795c1-ea93-4b40-aa1a-745657bc694d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 720,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}